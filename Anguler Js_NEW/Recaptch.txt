<div vc-recaptcha
                                     theme="'light'"
                                     key="publicKey"
                                     on-create="setWidgetId(widgetId)"
                                     on-success="setResponse(response)"
                                     on-expire="cbExpiration()"></div>
                            </div>

-----------------------------
var app = angular.module('myApp', ['ngRoute', 'vcRecaptcha']);
=======================================
 $scope.publicKey = "6LdT7CITAAAAAN_yh0qURgGzin3_tbqUfGt7o_eV";

----------------------------


    $scope.response = null;
    $scope.widgetId = null;

    $scope.setResponse = function (response) {
        console.info('Response available');

        $scope.response = response;
    };

    $scope.setWidgetId = function (widgetId) {
        console.info('Created widget ID: %s', widgetId);

        $scope.widgetId = widgetId;
    };

    $scope.cbExpiration = function () {
        console.info('Captcha expired. Resetting response object');

        vcRecaptchaService.reload($scope.widgetId);

        $scope.response = null;
    };


    $scope.Recaptchasignup = function () {
     

        try
        {
          
            console.log('sending the captcha response to the server', $scope.response);

           // var RecaptchaService = vcRecaptchaService.getResponse();

            if ($scope.response == null)
            {
                $scope.MainError = "Please resolve the captcha and Continue";
               

            }
            else
            {
            
                vcRecaptchaService.reload($scope.recaptchaId);
                $rootScope.loggedIn = true;
                $rootScope.leftMenu = true;
                $rootScope.userProfile = true;
                $location.path('/AchPaymentAmount');

            }
        }
        catch( e)
        {
            
        }
    }

    $scope.RecaptchasignupCardInfo = function ()
    {

        try {

            console.log('sending the captcha response to the server', $scope.response);

            // var RecaptchaService = vcRecaptchaService.getResponse();

            if ($scope.response == null)
            { 
                $scope.MainError = "Please resolve the captcha and Continue";


            }
            else {

                vcRecaptchaService.reload($scope.recaptchaId);
                $rootScope.loggedIn = true;
                $rootScope.leftMenu = true;
                $rootScope.userProfile = true;
                $location.path('/CardInfo');

            }
        }
        catch (e)
        {
            console.log('sending the captcha response to the server', e);
        }
    }
=====++++++++++++++++++++++++++++++++++++++++++++angular-recaptcha.min++++++++++++++++++++++++




/**
 * angular-recaptcha build:2015-04-28 
 * https://github.com/vividcortex/angular-recaptcha 
 * Copyright (c) 2015 VividCortex 
**/

!function (a) { "use strict"; a.module("vcRecaptcha", []) }(angular), function (a) { "use strict"; var b = a.module("vcRecaptcha"); b.service("vcRecaptchaService", ["$window", "$q", function (b, c) { function d() { return f ? c.when(f) : h } function e() { if (!f) throw new Error("reCaptcha has not been loaded yet.") } var f, g = c.defer(), h = g.promise; return b.vcRecaptchaApiLoaded = function () { f = b.grecaptcha, g.resolve(f) }, a.isDefined(b.grecaptcha) && b.vcRecaptchaApiLoaded(), { create: function (a, b, c, e) { return e.callback = c, e.sitekey = b, d().then(function (b) { return b.render(a, e) }) }, reload: function (a) { e(), f.reset(a) }, getResponse: function (a) { return e(), f.getResponse(a) } } }]) }(angular), function (a) { "use strict"; function b() { throw new Error('You need to set the "key" attribute to your public reCaptcha key. If you don\'t have a key, please get one from https://www.google.com/recaptcha/admin/create') } var c = a.module("vcRecaptcha"); c.directive("vcRecaptcha", ["$document", "$timeout", "vcRecaptchaService", function (a, c, d) { return { restrict: "A", require: "?^^form", scope: { response: "=?ngModel", key: "=", theme: "=?", tabindex: "=?", onCreate: "&", onSuccess: "&", onExpire: "&" }, link: function (e, f, g, h) { function i() { angular.element(a[0].querySelectorAll(".pls-container")).parent().remove() } g.hasOwnProperty("key") || b(), e.widgetId = null; var j = e.$watch("key", function (a) { if (a) { 40 !== a.length && b(); var k = function (a) { c(function () { h && h.$setValidity("recaptcha", !0), e.response = a, e.onSuccess({ response: a, widgetId: e.widgetId }) }), c(function () { h && h.$setValidity("recaptcha", !1), e.response = "", e.onExpire({ widgetId: e.widgetId }) }, 12e4) }; d.create(f[0], a, k, { theme: e.theme || g.theme || null, tabindex: e.tabindex || g.tabindex || null }).then(function (a) { h && h.$setValidity("recaptcha", !1), e.widgetId = a, e.onCreate({ widgetId: a }), e.$on("$destroy", i) }), j() } }) } } }]) }(angular);